// Generated by CoffeeScript 2.5.1
var SIZE;

import {
  range
} from '../js/utils.js';

import {
  Square
} from '../js/square.js';

import {
  Button
} from '../js/button.js';

import {
  click,
  getMove,
  global
} from '../js/globals.js';

SIZE = global.SIZE;

export var Board = class Board {
  constructor() {
    var i, j, len, ref;
    this.start = this.start.bind(this);
    this.draw = this.draw.bind(this);
    this.littera = this.littera.bind(this);
    this.flip = this.flip.bind(this);
    this.squares = [];
    this.pieces = "";
    this.flipped = false;
    ref = range(64);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      this.squares.push(new Square(i));
    }
    this.start();
    this.buttons = [];
    this.buttons.push(new Button(1.0 * SIZE, 9.5 * SIZE, 'first', () => {
      return click('first');
    }));
    this.buttons.push(new Button(2.7 * SIZE, 9.5 * SIZE, 'prev', () => {
      return click('prev');
    }));
    this.buttons.push(new Button(4.4 * SIZE, 9.5 * SIZE, 'next', () => {
      return click('next');
    }));
    this.buttons.push(new Button(6.1 * SIZE, 9.5 * SIZE, 'last', () => {
      return click('last');
    }));
    this.buttons.push(new Button(1.0 * SIZE, 10.5 * SIZE, 'flip', () => {
      return click('flip');
    }));
    this.buttons.push(new Button(2.7 * SIZE, 10.5 * SIZE, 'link', () => {
      return click('link');
    }));
  }

  start() {
    return this.pieces = "RNBQKBNRPPPPPPPP33333333444444445555555566666666pppppppprnbqkbnr";
  }

  draw() {
    var button, i, j, k, len, len1, ref, ref1, results, txt, txt0, txt1;
    fill('white');
    textSize(SIZE * 0.3);
    push();
    textAlign(LEFT, CENTER);
    text(global.filename, 0.05 * SIZE, 0.3 * SIZE);
    pop();
    ref = range(64);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      this.squares[i].draw(this.pieces[i], this.flipped);
    }
    stroke('black');
    noFill();
    rect(SIZE * 4.5, SIZE * 4.5, SIZE * 8, SIZE * 8);
    noStroke();
    this.littera();
    text(global.index + " of " + global.moves.length, 5 * SIZE, 10.5 * SIZE);
    text(global.data.depth, 10 * SIZE, 0.3 * SIZE);
    txt0 = "";
    txt1 = "";
    if (global.superIndex === 0) {
      txt0 = "actual move";
    }
    if (global.superIndex === getMove(global.index - 1).superiorsSan.length) {
      txt1 = "strongest";
    }
    if (txt0 !== "" && txt1 !== "") {
      txt = txt0 + " == " + txt1;
    } else {
      txt = txt0 + txt1;
    }
    text(txt, 8 * SIZE, 10.5 * SIZE);
    ref1 = this.buttons;
    results = [];
    for (k = 0, len1 = ref1.length; k < len1; k++) {
      button = ref1[k];
      results.push(button.draw());
    }
    return results;
  }

  littera() {
    var i, j, len, ref, results;
    fill('black');
    textSize(SIZE * 0.3);
    ref = range(8);
    results = [];
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (this.flipped) {
        text("hgfedcba"[i], SIZE * (i + 1), SIZE * 8.8);
        results.push(text("12345678"[i], SIZE * 0.25, SIZE * (i + 1)));
      } else {
        text("abcdefgh"[i], SIZE * (i + 1), SIZE * 8.8);
        results.push(text("87654321"[i], SIZE * 0.25, SIZE * (i + 1)));
      }
    }
    return results;
  }

  flip() {
    return this.flipped = !this.flipped;
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9hcmQuanMiLCJzb3VyY2VSb290IjoiLi4iLCJzb3VyY2VzIjpbImNvZmZlZVxcYm9hcmQuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBOztBQUFBLE9BQUE7RUFBUSxLQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLE1BQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxLQUFSO0VBQWMsT0FBZDtFQUFzQixNQUF0QjtDQUFBLE1BQUE7O0FBRUEsSUFBQSxHQUFPLE1BQU0sQ0FBQzs7QUFFZCxPQUFBLElBQWEsUUFBTixNQUFBLE1BQUE7RUFDTixXQUFhLENBQUEsQ0FBQTtBQUNkLFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUE7UUFlQyxDQUFBLFlBQUEsQ0FBQTtRQUdBLENBQUEsV0FBQSxDQUFBO1FBMkJBLENBQUEsY0FBQSxDQUFBO1FBV0EsQ0FBQSxXQUFBLENBQUE7SUF4REMsSUFBQyxDQUFBLE9BQUQsR0FBVztJQUNYLElBQUMsQ0FBQSxNQUFELEdBQVU7SUFDVixJQUFDLENBQUEsT0FBRCxHQUFXO0FBQ1g7SUFBQSxLQUFBLHFDQUFBOztNQUNDLElBQUMsQ0FBQSxPQUFPLENBQUMsSUFBVCxDQUFjLElBQUksTUFBSixDQUFXLENBQVgsQ0FBZDtJQUREO0lBRUEsSUFBQyxDQUFBLEtBQUQsQ0FBQTtJQUVBLElBQUMsQ0FBQSxPQUFELEdBQVU7SUFDVixJQUFDLENBQUEsT0FBTyxDQUFDLElBQVQsQ0FBYyxJQUFJLE1BQUosQ0FBVyxHQUFBLEdBQUksSUFBZixFQUFxQixHQUFBLEdBQUksSUFBekIsRUFBK0IsT0FBL0IsRUFBd0MsQ0FBQSxDQUFBLEdBQUE7YUFBTSxLQUFBLENBQU0sT0FBTjtJQUFOLENBQXhDLENBQWQ7SUFDQSxJQUFDLENBQUEsT0FBTyxDQUFDLElBQVQsQ0FBYyxJQUFJLE1BQUosQ0FBVyxHQUFBLEdBQUksSUFBZixFQUFx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SUFBQyxDQUFBLE9BQUQsR0FBVyxDQUFJLElBQUMsQ0FBQTtFQUFuQjs7QUExREQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3JhbmdlfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuaW1wb3J0IHtTcXVhcmV9IGZyb20gJy4uL2pzL3NxdWFyZS5qcydcclxuaW1wb3J0IHtCdXR0b259IGZyb20gJy4uL2pzL2J1dHRvbi5qcydcclxuaW1wb3J0IHtjbGljayxnZXRNb3ZlLGdsb2JhbH0gZnJvbSAnLi4vanMvZ2xvYmFscy5qcydcclxuXHJcblNJWkUgPSBnbG9iYWwuU0laRVxyXG5cclxuZXhwb3J0IGNsYXNzIEJvYXJkXHJcblx0Y29uc3RydWN0b3I6IC0+XHJcblx0XHRAc3F1YXJlcyA9IFtdXHJcblx0XHRAcGllY2VzID0gXCJcIlxyXG5cdFx0QGZsaXBwZWQgPSBmYWxzZVxyXG5cdFx0Zm9yIGkgaW4gcmFuZ2UgNjRcclxuXHRcdFx0QHNxdWFyZXMucHVzaCBuZXcgU3F1YXJlIGlcclxuXHRcdEBzdGFydCgpXHJcblxyXG5cdFx0QGJ1dHRvbnMgPVtdXHJcblx0XHRAYnV0dG9ucy5wdXNoIG5ldyBCdXR0b24gMS4wKlNJWkUsIDkuNSpTSVpFLCAnZmlyc3QnLCAoKSA9PiBjbGljayAnZmlyc3QnXHJcblx0XHRAYnV0dG9ucy5wdXNoIG5ldyBCdXR0b24gMi43KlNJWkUsIDkuNSpTSVpFLCAncHJldicsICgpID0+IGNsaWNrICdwcmV2J1xyXG5cdFx0QGJ1dHRvbnMucHVzaCBuZXcgQnV0dG9uIDQuNCpTSVpFLCA5LjUqU0laRSwgJ25leHQnLCAoKSA9PiBjbGljayAnbmV4dCdcclxuXHRcdEBidXR0b25zLnB1c2ggbmV3IEJ1dHRvbiA2LjEqU0laRSwgOS41KlNJWkUsICdsYXN0JywgKCkgPT4gY2xpY2sgJ2xhc3QnXHJcblx0XHRAYnV0dG9ucy5wdXNoIG5ldyBCdXR0b24gMS4wKlNJWkUsIDEwLjUqU0laRSwgJ2ZsaXAnLCAoKSA9PiBjbGljayAnZmxpcCdcclxuXHRcdEBidXR0b25zLnB1c2ggbmV3IEJ1dHRvbiAyLjcqU0laRSwgMTAuNSpTSVpFLCAnbGluaycsICgpID0+IGNsaWNrICdsaW5rJ1xyXG5cclxuXHRzdGFydCA6ID0+XHJcblx0XHRAcGllY2VzID0gXCJSTkJRS0JOUlBQUFBQUFBQMzMzMzMzMzM0NDQ0NDQ0NDU1NTU1NTU1NjY2NjY2NjZwcHBwcHBwcHJuYnFrYm5yXCJcclxuXHJcblx0ZHJhdyA6ID0+XHJcblx0XHRmaWxsICd3aGl0ZSdcclxuXHRcdHRleHRTaXplIFNJWkUqMC4zXHJcblx0XHRwdXNoKClcclxuXHRcdHRleHRBbGlnbiBMRUZULENFTlRFUlxyXG5cdFx0dGV4dCBnbG9iYWwuZmlsZW5hbWUsMC4wNSpTSVpFLCAwLjMqU0laRVxyXG5cdFx0cG9wKClcclxuXHRcdGZvciBpIGluIHJhbmdlIDY0XHJcblx0XHRcdEBzcXVhcmVzW2ldLmRyYXcgQHBpZWNlc1tpXSxAZmxpcHBlZFxyXG5cdFx0c3Ryb2tlICdibGFjaydcclxuXHRcdG5vRmlsbCgpXHJcblx0XHRyZWN0IFNJWkUqNC41LFNJWkUqNC41LFNJWkUqOCxTSVpFKjhcclxuXHRcdG5vU3Ryb2tlKClcclxuXHRcdEBsaXR0ZXJhKClcclxuXHRcdHRleHQgZ2xvYmFsLmluZGV4ICsgXCIgb2YgXCIrIGdsb2JhbC5tb3Zlcy5sZW5ndGgsIDUqU0laRSwgMTAuNSpTSVpFXHJcblx0XHR0ZXh0IGdsb2JhbC5kYXRhLmRlcHRoLCAxMCpTSVpFLCAwLjMqU0laRVxyXG5cclxuXHRcdHR4dDA9XCJcIlxyXG5cdFx0dHh0MT1cIlwiXHJcblx0XHRpZiBnbG9iYWwuc3VwZXJJbmRleCA9PSAwIHRoZW4gdHh0MCA9IFwiYWN0dWFsIG1vdmVcIlxyXG5cdFx0aWYgZ2xvYmFsLnN1cGVySW5kZXggPT0gZ2V0TW92ZShnbG9iYWwuaW5kZXgtMSkuc3VwZXJpb3JzU2FuLmxlbmd0aCB0aGVuIHR4dDEgPSBcInN0cm9uZ2VzdFwiXHJcblx0XHRpZiB0eHQwIT1cIlwiIGFuZCB0eHQxIT1cIlwiIHRoZW4gdHh0ID0gdHh0MCArIFwiID09IFwiICsgdHh0MVxyXG5cdFx0ZWxzZSB0eHQgPSB0eHQwICsgdHh0MVxyXG5cdFx0dGV4dCB0eHQsIDgqU0laRSwgMTAuNSpTSVpFXHJcblx0XHRmb3IgYnV0dG9uIGluIEBidXR0b25zXHJcblx0XHRcdGJ1dHRvbi5kcmF3KClcclxuXHJcblx0bGl0dGVyYSA6ID0+XHJcblx0XHRmaWxsICdibGFjaydcclxuXHRcdHRleHRTaXplIFNJWkUqMC4zXHJcblx0XHRmb3IgaSBpbiByYW5nZSA4XHJcblx0XHRcdGlmIEBmbGlwcGVkXHJcblx0XHRcdFx0dGV4dCBcImhnZmVkY2JhXCJbaV0sU0laRSooaSsxKSxTSVpFKjguOFxyXG5cdFx0XHRcdHRleHQgXCIxMjM0NTY3OFwiW2ldLFNJWkUqMC4yNSxTSVpFKihpKzEpXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHR0ZXh0IFwiYWJjZGVmZ2hcIltpXSxTSVpFKihpKzEpLFNJWkUqOC44XHJcblx0XHRcdFx0dGV4dCBcIjg3NjU0MzIxXCJbaV0sU0laRSowLjI1LFNJWkUqKGkrMSlcclxuXHJcblx0ZmxpcCA6ID0+IEBmbGlwcGVkID0gbm90IEBmbGlwcGVkXHJcbiJdfQ==
//# sourceURL=c:\github\2023-018-Python-Chess_Evaluate\coffee\board.coffee