// Generated by CoffeeScript 2.5.1
import {
  getMove,
  global
} from '../js/globals.js';

import {
  range
} from '../js/utils.js';

export var Button = class Button {
  constructor(x1, y1, text1, onclick) {
    this.star = this.star.bind(this);
    this.draw = this.draw.bind(this);
    this.inside = this.inside.bind(this);
    this.x = x1;
    this.y = y1;
    this.text = text1;
    this.onclick = onclick;
    this.w = 1.5 * global.SIZE;
    this.h = 0.7 * global.SIZE;
    this.bg = 'lightgray';
    this.fg = 'black';
    this.align = CENTER;
    this.drawStar = false;
  }

  star(c1, c2, x, y, r2, n) {
    var a, i, j, len, r, r1, ref, sx, sy;
    r1 = 0.385 * r2;
    fill(c2);
    ellipse(x, y, 2 * r2);
    fill(c1);
    angleMode(DEGREES);
    a = 180 / n;
    beginShape();
    ref = range(2 * n);
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      if (i % 2 === 0) {
        r = r1;
      } else {
        r = r2;
      }
      sx = x + r * cos(i * a + 90);
      sy = y + r * sin(i * a + 90);
      vertex(sx, sy);
    }
    return endShape(CLOSE);
  }

  draw() {
    var move, txt, x;
    move = getMove(global.index - 1);
    if (global.superIndex === 0) {
      txt = move.san;
    } else {
      txt = move.superiorsSan[global.superIndex - 1];
    }
    fill(this.bg);
    rect(this.x, this.y, this.w, this.h);
    if (this.align === LEFT) {
      x = this.x - this.w / 2;
    } else {
      x = this.x;
    }
    if (this.text === txt) {
      fill('red');
    } else {
      fill(this.fg);
    }
    push();
    textSize(global.SIZE / 2);
    textAlign(this.align);
    noStroke();
    text(this.text, x, this.y + 0.05 * global.SIZE);
    pop();
    if (this.drawStar) {
      return this.star("green", "white", this.x + 0.5 * global.SIZE, this.y, 0.2 * global.SIZE, 5);
    }
  }

  inside(x, y) {
    return (this.x - this.w / 2 < x && x < this.x + this.w / 2) && (this.y - this.h / 2 < y && y < this.y + this.h / 2);
  }

};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXGJ1dHRvbi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQUE7RUFBUSxPQUFSO0VBQWdCLE1BQWhCO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsS0FBUjtDQUFBLE1BQUE7O0FBRUEsT0FBQSxJQUFhLFNBQU4sTUFBQSxPQUFBO0VBQ04sV0FBYSxHQUFBLElBQUEsT0FBQSxTQUFBLENBQUE7UUFRYixDQUFBLFdBQUEsQ0FBQTtRQWVBLENBQUEsV0FBQSxDQUFBO1FBb0JBLENBQUEsYUFBQSxDQUFBO0lBM0NjLElBQUMsQ0FBQTtJQUFFLElBQUMsQ0FBQTtJQUFFLElBQUMsQ0FBQTtJQUFLLElBQUMsQ0FBQTtJQUMxQixJQUFDLENBQUEsQ0FBRCxHQUFLLEdBQUEsR0FBTSxNQUFNLENBQUM7SUFDbEIsSUFBQyxDQUFBLENBQUQsR0FBSyxHQUFBLEdBQU0sTUFBTSxDQUFDO0lBQ2xCLElBQUMsQ0FBQSxFQUFELEdBQU07SUFDTixJQUFDLENBQUEsRUFBRCxHQUFNO0lBQ04sSUFBQyxDQUFBLEtBQUQsR0FBUztJQUNULElBQUMsQ0FBQSxRQUFELEdBQVk7RUFOQTs7RUFRYixJQUFPLENBQUMsRUFBRCxFQUFLLEVBQUwsRUFBUyxDQUFULEVBQVksQ0FBWixFQUFlLEVBQWYsRUFBbUIsQ0FBbkIsQ0FBQTtBQUNSLFFBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxFQUFBLEVBQUEsR0FBQSxFQUFBLEVBQUEsRUFBQTtJQUFFLEVBQUEsR0FBSyxLQUFBLEdBQU07SUFDWCxJQUFBLENBQUssRUFBTDtJQUNBLE9BQUEsQ0FBUSxDQUFSLEVBQVUsQ0FBVixFQUFZLENBQUEsR0FBRSxFQUFkO0lBQ0EsSUFBQSxDQUFLLEVBQUw7SUFDQSxTQUFBLENBQVUsT0FBVjtJQUNBLENBQUEsR0FBSSxHQUFBLEdBQU07SUFDVixVQUFBLENBQUE7QUFDQTtJQUFBLEtBQUEscUNBQUE7O01BQ0MsSUFBRyxDQUFBLEdBQUUsQ0FBRixLQUFLLENBQVI7UUFBZSxDQUFBLEdBQUUsR0FBakI7T0FBQSxNQUFBO1FBQXlCLENBQUEsR0FBRSxHQUEzQjs7TUFDQSxFQUFBLEdBQUssQ0FBQSxHQUFJLENBQUEsR0FBSSxHQUFBLENBQUksQ0FBQSxHQUFFLENBQUYsR0FBSSxFQUFSO01BQ2IsRUFBQSxHQUFLLENBQUEsR0FBSSxDQUFBLEdBQUksR0FBQSxDQUFJLENBQUEsR0FBRSxDQUFGLEdBQUksRUFBUjtNQUNiLE1BQUEsQ0FBTyxFQUFQLEVBQVcsRUFBWDtJQUpEO1dBS0EsUUFBQSxDQUFTLEtBQVQ7RUFiTTs7RUFlUCxJQUFPLENBQUEsQ0FBQTtBQUNSLFFBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQTtJQUFFLElBQUEsR0FBTyxPQUFBLENBQVEsTUFBTSxDQUFDLEtBQVAsR0FBYSxDQUFyQjtJQUNQLElBQUcsTUFBTSxDQUFDLFVBQVAsS0FBcUIsQ0FBeEI7TUFDQyxHQUFBLEdBQU0sSUFBSSxDQUFDLElBRFo7S0FBQSxNQUFBO01BR0MsR0FBQSxHQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLFVBQVAsR0FBa0IsQ0FBbkIsRUFIeEI7O0lBSUEsSUFBQSxDQUFLLElBQUMsQ0FBQSxFQUFOO0lBQ0EsSUFBQSxDQUFLLElBQUMsQ0FBQSxDQUFOLEVBQVEsSUFBQyxDQUFBLENBQVQsRUFBVyxJQUFDLENBQUEsQ0FBWixFQUFjLElBQUMsQ0FBQSxDQUFmO0lBRUEsSUFBRyxJQUFDLENBQUEsS0FBRCxLQUFRLElBQVg7TUFBcUIsQ0FBQSxHQUFFLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxFQUE3QjtLQUFBLE1BQUE7TUFBb0MsQ0FBQSxHQUFFLElBQUMsQ0FBQSxFQUF2Qzs7SUFDQSxJQUFHLElBQUMsQ0FBQSxJQUFELEtBQVMsR0FBWjtNQUFxQixJQUFBLENBQUssS0FBTCxFQUFyQjtLQUFBLE1BQUE7TUFBcUMsSUFBQSxDQUFLLElBQUMsQ0FBQSxFQUFOLEVBQXJDOztJQUNBLElBQUEsQ0FBQTtJQUNBLFFBQUEsQ0FBUyxNQUFNLENBQUMsSUFBUCxHQUFZLENBQXJCO0lBQ0EsU0FBQSxDQUFVLElBQUMsQ0FBQSxLQUFYO0lBQ0EsUUFBQSxDQUFBO0lBQ0EsSUFBQSxDQUFLLElBQUMsQ0FBQSxJQUFOLEVBQVksQ0FBWixFQUFjLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQSxHQUFLLE1BQU0sQ0FBQyxJQUE3QjtJQUNBLEdBQUEsQ0FBQTtJQUNBLElBQUcsSUFBQyxDQUFBLFFBQUo7YUFDQyxJQUFDLENBQUEsSUFBRCxDQUFNLE9BQU4sRUFBYyxPQUFkLEVBQXVCLElBQUMsQ0FBQSxDQUFELEdBQUcsR0FBQSxHQUFJLE1BQU0sQ0FBQyxJQUFyQyxFQUEyQyxJQUFDLENBQUEsQ0FBNUMsRUFBK0MsR0FBQSxHQUFJLE1BQU0sQ0FBQyxJQUExRCxFQUFnRSxDQUFoRSxFQUREOztFQWpCTTs7RUFvQlAsTUFBUyxDQUFDLENBQUQsRUFBRyxDQUFILENBQUE7V0FBUyxDQUFBLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFOLEdBQVUsQ0FBVixJQUFVLENBQVYsR0FBYyxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBcEIsQ0FBQSxJQUEwQixDQUFBLElBQUMsQ0FBQSxDQUFELEdBQUcsSUFBQyxDQUFBLENBQUQsR0FBRyxDQUFOLEdBQVUsQ0FBVixJQUFVLENBQVYsR0FBYyxJQUFDLENBQUEsQ0FBRCxHQUFHLElBQUMsQ0FBQSxDQUFELEdBQUcsQ0FBcEI7RUFBbkM7O0FBNUNIIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtnZXRNb3ZlLGdsb2JhbH0gZnJvbSAnLi4vanMvZ2xvYmFscy5qcydcclxuaW1wb3J0IHtyYW5nZX0gZnJvbSAnLi4vanMvdXRpbHMuanMnXHJcblxyXG5leHBvcnQgY2xhc3MgQnV0dG9uXHJcblx0Y29uc3RydWN0b3I6IChAeCxAeSxAdGV4dCxAb25jbGljaykgLT5cclxuXHRcdEB3ID0gMS41ICogZ2xvYmFsLlNJWkVcclxuXHRcdEBoID0gMC43ICogZ2xvYmFsLlNJWkVcclxuXHRcdEBiZyA9ICdsaWdodGdyYXknXHJcblx0XHRAZmcgPSAnYmxhY2snXHJcblx0XHRAYWxpZ24gPSBDRU5URVJcclxuXHRcdEBkcmF3U3RhciA9IGZhbHNlXHJcblxyXG5cdHN0YXIgOiAoYzEsIGMyLCB4LCB5LCByMiwgbikgPT5cclxuXHRcdHIxID0gMC4zODUqcjJcclxuXHRcdGZpbGwgYzJcclxuXHRcdGVsbGlwc2UgeCx5LDIqcjJcclxuXHRcdGZpbGwgYzFcclxuXHRcdGFuZ2xlTW9kZSBERUdSRUVTXHJcblx0XHRhID0gMTgwIC8gblxyXG5cdFx0YmVnaW5TaGFwZSgpXHJcblx0XHRmb3IgaSBpbiByYW5nZSAyKm5cclxuXHRcdFx0aWYgaSUyPT0wIHRoZW4gcj1yMSBlbHNlIHI9cjJcclxuXHRcdFx0c3ggPSB4ICsgciAqIGNvcyBpKmErOTBcclxuXHRcdFx0c3kgPSB5ICsgciAqIHNpbiBpKmErOTBcclxuXHRcdFx0dmVydGV4IHN4LCBzeVxyXG5cdFx0ZW5kU2hhcGUgQ0xPU0VcclxuXHJcblx0ZHJhdyA6ID0+XHJcblx0XHRtb3ZlID0gZ2V0TW92ZSBnbG9iYWwuaW5kZXgtMVxyXG5cdFx0aWYgZ2xvYmFsLnN1cGVySW5kZXggPT0gMFxyXG5cdFx0XHR0eHQgPSBtb3ZlLnNhblxyXG5cdFx0ZWxzZVxyXG5cdFx0XHR0eHQgPSBtb3ZlLnN1cGVyaW9yc1NhbltnbG9iYWwuc3VwZXJJbmRleC0xXVxyXG5cdFx0ZmlsbCBAYmdcclxuXHRcdHJlY3QgQHgsQHksQHcsQGhcclxuXHJcblx0XHRpZiBAYWxpZ249PUxFRlQgdGhlbiB4PUB4LUB3LzIgZWxzZSB4PUB4XHJcblx0XHRpZiBAdGV4dCA9PSB0eHQgdGhlbiBmaWxsICdyZWQnIGVsc2UgZmlsbCBAZmdcclxuXHRcdHB1c2goKVxyXG5cdFx0dGV4dFNpemUgZ2xvYmFsLlNJWkUvMlxyXG5cdFx0dGV4dEFsaWduIEBhbGlnblxyXG5cdFx0bm9TdHJva2UoKVxyXG5cdFx0dGV4dCBAdGV4dCwgeCxAeSswLjA1Kmdsb2JhbC5TSVpFXHJcblx0XHRwb3AoKVxyXG5cdFx0aWYgQGRyYXdTdGFyXHJcblx0XHRcdEBzdGFyIFwiZ3JlZW5cIixcIndoaXRlXCIsIEB4KzAuNSpnbG9iYWwuU0laRSwgQHksIDAuMipnbG9iYWwuU0laRSwgNVxyXG5cclxuXHRpbnNpZGUgOiAoeCx5KSA9PiBAeC1Ady8yIDwgeCA8IEB4K0B3LzIgYW5kIEB5LUBoLzIgPCB5IDwgQHkrQGgvMlxyXG4iXX0=
//# sourceURL=c:\github\2023-018-Python-Chess_Evaluate\coffee\button.coffee