// Generated by CoffeeScript 2.5.1
var indexOf = [].indexOf,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

export var global = {
  board: null,
  index: 0,
  SIZE: 50,
  filename: "",
  pics: {},
  moves: [],
  data: null,
  superIndex: 0,
  piecess: [],
  buttons: []
};

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Button
} from '../js/button.js';

export var coords = (uci) => {
  var c0, c1, r0, r1;
  c0 = "abcdefgh".indexOf(uci[0]);
  r0 = "12345678".indexOf(uci[1]);
  c1 = "abcdefgh".indexOf(uci[2]);
  r1 = "12345678".indexOf(uci[3]);
  return [c0 + 8 * r0, c1 + 8 * r1];
};

ass([8, 24], coords("a2a4"));

export var empty = (n) => {
  return (1 + Math.floor(n / 8)).toString();
};

export var makeMove = (uci, pieces) => {
  var enPassant, enPassantTrue, from, normalMove, promote, swap, to;
  swap = function(a, b, c, d) {
    return [pieces[a], pieces[b], pieces[c], pieces[d]] = [pieces[b], pieces[a], pieces[d], pieces[c]];
  };
  promote = function(uci, from, to) {
    var newPiece;
    newPiece = uci[4];
    if (indexOf.call(range(56, 63), to) >= 0) {
      newPiece = newPiece.toUpperCase();
    }
    pieces[to] = newPiece;
    return pieces[from] = empty(from);
  };
  enPassantTrue = function(from, to) { // Denna funktion skapades av CoPilot. NÃ¤stan korrekt.
    var ref, ref1, ref2;
    if ((ref = pieces[from], indexOf.call('pP', ref) >= 0) && pieces[to] === empty(to)) {
      if (pieces[from] === 'p' && pieces[to + 8] === 'P' && ((ref1 = from - to) === 7 || ref1 === 9)) {
        return true; // black takes white pawn
      }
      if (pieces[from] === 'P' && pieces[to - 8] === 'p' && ((ref2 = to - from) === 7 || ref2 === 9)) {
        return true; // white takes black pawn
      }
    }
    return false;
  };
  enPassant = function(from, to) {
    if (pieces[from] === 'p') {
      pieces[to + 8] = empty(to + 8);
    }
    if (pieces[from] === 'P') {
      pieces[to - 8] = empty(to - 8);
    }
    pieces[to] = pieces[from];
    return pieces[from] = empty(to);
  };
  normalMove = function(from, to) {
    pieces[to] = pieces[from];
    pieces[from] = empty(from);
    return pieces;
  };
  pieces = pieces.split("");
  [from, to] = coords(uci);
  if (uci === 'e1g1') {
    swap(4, 6, 5, 7); // castlings
  } else if (uci === 'e1c1') {
    swap(4, 2, 0, 3);
  } else if (uci === 'e8g8') {
    swap(60, 62, 61, 63);
  } else if (uci === 'e8c8') {
    swap(56, 59, 58, 60);
  } else if (uci.length === 5) {
    promote(uci, from, to);
  } else if (enPassantTrue(from, to)) {
    enPassant(from, to);
  } else {
    normalMove(from, to);
  }
  pieces = pieces.join("");
  return pieces;
};

ass("RNBQKBNRPPPP2PPP333333334444P4445555555566666666pppppppprnbqkbnr", makeMove('e2e4', "RNBQKBNRPPPPPPPP33333333444444445555555566666666pppppppprnbqkbnr"));

ass("R1111RK1222222223333333344444444555555556666666677777777r888k88r", makeMove('e1g1', "R111K11R222222223333333344444444555555556666666677777777r888k88r"));

ass("11KR111R222222223333333344444444555555556666666677777777r888k88r", makeMove('e1c1', "R111K11R222222223333333344444444555555556666666677777777r888k88r"));

ass("R111K11R222222223333333344444444555555556666666677777777r8888rk8", makeMove('e8g8', "R111K11R222222223333333344444444555555556666666677777777r888k88r"));

ass("R111K11R22222222333333334444444455555555666666667777777788kr888r", makeMove('e8c8', "R111K11R222222223333333344444444555555556666666677777777r888k88r"));

ass("R111K11R222222223333333344444444555555556666666677777777Q8888888", makeMove('a7a8q', "R111K11R2222222233333333444444445555555566666666P777777788888888"));

ass("1111r11122222222333333334444444455555555666666667777777788888888", makeMove('e2e1r', "111111112222p222333333334444444455555555666666667777777788888888"));

ass("11111111222222223333p3334444444455555555666666667777777788888888", makeMove('f4e3', "11111111222222223333P33344444p4455555555666666667777777788888888"));

ass('RNBQKBNR2PPPPPPP33333333P44444445555555566666666pppppppprnbqkbnr', makeMove('a2a4', "RNBQKBNRPPPPPPPP33333333444444445555555566666666pppppppprnbqkbnr"));

export var setIndex = (value) => {
  var i, j, len, move, ref, tempSAN, tempUCI;
  if (value < -1 || value > global.moves.length) {
    return;
  }
  if (value === -1) {
    return global.board.start();
  } else {
    global.index = value;
    global.buttons = [];
    global.board.pieces = global.piecess[global.index];
    if (global.index <= 0) {
      return;
    }
    move = global.moves[global.index - 1];
    global.superIndex = 0;
    if (move.superiors.length === 0) {
      tempSAN = [move.san];
      tempUCI = [move.uci];
    } else {
      tempSAN = [move.san].concat(move.superiorsSan);
      tempUCI = [move.uci].concat(move.superiors);
    }
    ref = range(min(13, tempSAN.length));
    for (j = 0, len = ref.length; j < len; j++) {
      i = ref[j];
      ((i) => {
        var button, san, uci, x, y;
        x = 9.4 * global.SIZE;
        y = 0.8 * global.SIZE * (i + 1.1);
        san = tempSAN[i];
        uci = tempUCI[i];
        button = new Button(x, y, san, () => {
          return click(i);
        });
        button.bg = ['black', 'white'][global.index % 2];
        button.fg = ['white', 'black'][global.index % 2];
        button.align = LEFT;
        return global.buttons.push(button);
      })(i);
    }
    if (global.buttons.length === 1) {
      i = 0;
    } else {
      i = 1;
    }
    return global.buttons[i].drawStar = true;
  }
};

export var click = (key) => {
  if (key === 'flip') {
    return global.board.flip();
  } else if (key === 'first') {
    return setIndex(0);
  } else if (key === 'last') {
    return setIndex(global.moves.length);
  } else if (key === 'prev') {
    return setIndex(global.index - 1);
  } else if (key === 'next') {
    return setIndex(global.index + 1);
  } else if (key === 'link') {
    return window.open(data.link, '_blank');
  } else if (key === 'up') {
    return fixSuper(-1);
  } else if (key === 'down') {
    return fixSuper(1);
  } else {
    setIndex(global.index);
    return global.board.move(key);
  }
};

export var fixSuper = (value) => {
  var uci;
  global.superIndex = modulo(global.superIndex + value, getMove(global.index - 1).superiors.length + 1);
  if (global.superIndex === 0) {
    uci = getMove(global.index - 1).uci;
  } else {
    uci = getMove(global.index - 1).superiors[global.superIndex - 1];
  }
  return global.board.pieces = makeMove(uci, global.piecess[global.index - 1]);
};

export var getMove = (index) => {
  if (index === -1) {
    return {
      score: '',
      uci: '',
      san: '',
      superiors: [],
      superiorsSan: []
    };
  } else {
    return global.moves[index];
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-018-Python-Chess_Evaluate\coffee\globals.coffee