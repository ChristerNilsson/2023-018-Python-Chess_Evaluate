// Generated by CoffeeScript 2.5.1
var SIZE, split, xdraw;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  Square
} from '../js/square.js';

import {
  makeMove,
  setIndex,
  click,
  fixSuper,
  global
} from '../js/globals.js';

SIZE = global.SIZE;

//global.filename = 'lichess_pgn_2023.03.30_ChristerNilsson_vs_assman69420.HaBJHriw.json'
//global.filename = 'JanChristerNilsson_vs_dn1023_2023.03.29.json'
//global.filename = "lichess_pgn_2023.03.31_Onur1907-06_vs_ChristerNilsson.BFUYknEp.json"
//global.filename = "lichess_pgn_2023.03.31_ChristerNilsson_vs_arapop.kElIgV5u.json"
//global.filename ="lichess_pgn_2023.04.01_MohamedFadel123_vs_ChristerNilsson-D15.MyJVoc2Y.json"
//global.filename ="lichess_pgn_2023.04.01_king1971_vs_ChristerNilsson.7aPwVw9A.json"
//global.filename ="lichess_pgn_2023.04.03_mathewjohn1965_vs_ChristerNilsson.hwnVaJZo.json"
//global.filename = "Bobby Fischer_vs_Boris V Spassky_1992.__.__.json"
global.filename = "Hikaru_vs_______.__.__.json";

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  global.data = loadJSON('../data/' + global.filename);
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('../images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('../images/w' + letter.toLowerCase() + '.png'));
  }
  return results;
};

// there is a bug in split
split = function(s) {
  if (s === "") {
    return [];
  } else {
    return s.split(" ");
  }
};

window.setup = () => {
  var i, len, move, ref;
  createCanvas(SIZE * 10.3, SIZE * 11);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  global.board = new Board();
  // [1, 35, "e5", "c5 d5 c6 Nc6", "e7e5", "c7c5 d7d5 c7c6 b8c6"],
  global.moves = global.data.plies;
  global.moves = _.map(global.moves, (move) => {
    var san, score, scores, superiors, superiorsSan, uci;
    score = move[1];
    san = move[2];
    superiorsSan = split(move[3]);
    uci = move[4];
    superiors = split(move[5]);
    scores = split(move[6]);
    superiorsSan = superiorsSan.slice(0, 12);
    superiors = superiors.slice(0, 12);
    //superiorsSan.reverse()
    //superiors.reverse()
    //scores.reverse()
    return {score, uci, san, superiors, superiorsSan, scores};
  });
  global.piecess.push(global.board.pieces);
  ref = global.moves;
  for (i = 0, len = ref.length; i < len; i++) {
    move = ref[i];
    global.board.pieces = makeMove(move.uci, _.last(global.piecess));
    global.piecess.push(global.board.pieces);
  }
  setIndex(0); // tomt brÃ¤de
  return xdraw();
};

xdraw = () => {
  var button, i, len, ref, results;
  background('gray');
  textSize(SIZE);
  global.board.draw();
  ref = global.buttons;
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    results.push(button.draw());
  }
  return results;
};

window.keyPressed = () => {
  if (key === 'ArrowRight') {
    click('next');
  }
  if (key === 'ArrowLeft') {
    click('prev');
  }
  if (key === 'ArrowUp') {
    click('up');
  }
  if (key === 'ArrowDown') {
    click('down');
  }
  if (key === ' ') {
    click('flip');
  }
  if (key === 'Home') {
    click('first');
  }
  if (key === 'End') {
    click('last');
  }
  return xdraw();
};

window.mousePressed = () => {
  var button, i, len, ref;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return;
    }
  }
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2023-018-Python-Chess_Evaluate\coffee\sketch.coffee