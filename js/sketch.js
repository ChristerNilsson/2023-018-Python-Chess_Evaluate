// Generated by CoffeeScript 2.5.1
var SIZE, split, xdraw;

import _ from 'https://cdn.skypack.dev/lodash';

import {
  ass,
  log,
  range
} from '../js/utils.js';

import {
  Board
} from '../js/board.js';

import {
  Button
} from '../js/button.js';

import {
  Square
} from '../js/square.js';

import {
  makeMove,
  setIndex,
  click,
  fixSuper,
  global
} from '../js/globals.js';

SIZE = global.SIZE;

//global.filename = 'lichess_pgn_2023.03.30_ChristerNilsson_vs_assman69420.HaBJHriw.json'
//global.filename = 'JanChristerNilsson_vs_dn1023_2023.03.29.json'
//global.filename = "lichess_pgn_2023.03.31_Onur1907-06_vs_ChristerNilsson.BFUYknEp.json"
//global.filename = "lichess_pgn_2023.03.31_ChristerNilsson_vs_arapop.kElIgV5u.json"
global.filename = "lichess_pgn_2023.04.01_MohamedFadel123_vs_ChristerNilsson-D15.MyJVoc2Y.json";

global.filename = "lichess_pgn_2023.04.01_king1971_vs_ChristerNilsson.7aPwVw9A.json";

window.preload = () => {
  var i, j, len, len1, letter, ref, ref1, results;
  global.data = loadJSON('../data/' + global.filename);
  ref = "rnbqkp";
  for (i = 0, len = ref.length; i < len; i++) {
    letter = ref[i];
    global.pics[letter] = loadImage('images/b' + letter + '.png');
  }
  ref1 = "RNBQKP";
  results = [];
  for (j = 0, len1 = ref1.length; j < len1; j++) {
    letter = ref1[j];
    results.push(global.pics[letter] = loadImage('images/w' + letter + '.png'));
  }
  return results;
};

// there is a bug in split
split = function(s) {
  if (s === "") {
    return [];
  } else {
    return s.split(" ");
  }
};

window.setup = () => {
  var i, len, move, ref;
  createCanvas(SIZE * 10.3, SIZE * 11);
  textAlign(CENTER, CENTER);
  rectMode(CENTER);
  global.board = new Board();
  // [1, 35, "e5", "c5 d5 c6 Nc6", "e7e5", "c7c5 d7d5 c7c6 b8c6"],
  global.moves = global.data.plies;
  global.moves = _.map(global.moves, (move) => {
    var san, score, superiors, superiorsSan, uci;
    score = move[1];
    san = move[2];
    superiorsSan = split(move[3]);
    uci = move[4];
    superiors = split(move[5]);
    superiorsSan.reverse();
    superiors.reverse();
    return {score, uci, san, superiors, superiorsSan};
  });
  global.piecess.push(global.board.pieces);
  ref = global.moves;
  for (i = 0, len = ref.length; i < len; i++) {
    move = ref[i];
    global.board.pieces = makeMove(move.uci, _.last(global.piecess));
    global.piecess.push(global.board.pieces);
  }
  setIndex(0); // tomt brÃ¤de
  return xdraw();
};

xdraw = () => {
  var button, i, len, ref, results;
  background('gray');
  textSize(SIZE);
  global.board.draw();
  ref = global.buttons;
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    results.push(button.draw());
  }
  return results;
};

window.keyPressed = () => {
  if (key === 'ArrowRight') {
    click('next');
  }
  if (key === 'ArrowLeft') {
    click('prev');
  }
  if (key === 'ArrowUp') {
    click('up');
  }
  if (key === 'ArrowDown') {
    click('down');
  }
  if (key === ' ') {
    click('flip');
  }
  if (key === 'Home') {
    click('first');
  }
  if (key === 'End') {
    click('last');
  }
  return xdraw();
};

window.mousePressed = () => {
  var button, i, len, ref;
  ref = global.buttons.concat(global.board.buttons);
  for (i = 0, len = ref.length; i < len; i++) {
    button = ref[i];
    if (button.inside(mouseX, mouseY)) {
      button.onclick();
      xdraw();
      return;
    }
  }
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQTs7QUFBQSxPQUFPLENBQVAsTUFBQTs7QUFDQSxPQUFBO0VBQVEsR0FBUjtFQUFZLEdBQVo7RUFBZ0IsS0FBaEI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxLQUFSO0NBQUEsTUFBQTs7QUFDQSxPQUFBO0VBQVEsTUFBUjtDQUFBLE1BQUE7O0FBQ0EsT0FBQTtFQUFRLE1BQVI7Q0FBQSxNQUFBOztBQUNBLE9BQUE7RUFBUSxRQUFSO0VBQWlCLFFBQWpCO0VBQTBCLEtBQTFCO0VBQWdDLFFBQWhDO0VBQXlDLE1BQXpDO0NBQUEsTUFBQTs7QUFFQSxJQUFBLEdBQU8sTUFBTSxDQUFDLEtBUGQ7Ozs7OztBQWFBLE1BQU0sQ0FBQyxRQUFQLEdBQWlCOztBQUNqQixNQUFNLENBQUMsUUFBUCxHQUFpQjs7QUFFakIsTUFBTSxDQUFDLE9BQVAsR0FBaUIsQ0FBQSxDQUFBLEdBQUE7QUFDakIsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUE7RUFBQyxNQUFNLENBQUMsSUFBUCxHQUFjLFFBQUEsQ0FBUyxVQUFBLEdBQWEsTUFBTSxDQUFDLFFBQTdCO0FBQ2Q7RUFBQSxLQUFBLHFDQUFBOztJQUNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBRCxDQUFYLEdBQXNCLFNBQUEsQ0FBVSxVQUFBLEdBQWEsTUFBYixHQUFzQixNQUFoQztFQUR2QjtBQUVBO0FBQUE7RUFBQSxLQUFBLHdDQUFBOztpQkFDQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQUQsQ0FBWCxHQUFzQixTQUFBLENBQVUsVUFBQSxHQUFhLE1BQWIsR0FBc0IsTUFBaEM7RUFEdkIsQ0FBQTs7QUFKZ0IsRUFoQmpCOzs7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U0FDQSxLQUFBLENBQUE7QUFSbUI7O0FBVXBCLE1BQU0sQ0FBQyxZQUFQLEdBQXNCLENBQUEsQ0FBQSxHQUFBO0FBQ3RCLE1BQUEsTUFBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUE7QUFBQztFQUFBLEtBQUEscUNBQUE7O0lBQ0MsSUFBRyxNQUFNLENBQUMsTUFBUCxDQUFjLE1BQWQsRUFBcUIsTUFBckIsQ0FBSDtNQUNDLE1BQU0sQ0FBQyxPQUFQLENBQUE7TUFDQSxLQUFBLENBQUE7QUFDQSxhQUhEOztFQUREO0FBRHFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF8gICAgICAgICAgIGZyb20gJ2h0dHBzOi8vY2RuLnNreXBhY2suZGV2L2xvZGFzaCdcclxuaW1wb3J0IHthc3MsbG9nLHJhbmdlfSBmcm9tICcuLi9qcy91dGlscy5qcydcclxuaW1wb3J0IHtCb2FyZH0gZnJvbSAnLi4vanMvYm9hcmQuanMnXHJcbmltcG9ydCB7QnV0dG9ufSBmcm9tICcuLi9qcy9idXR0b24uanMnXHJcbmltcG9ydCB7U3F1YXJlfSBmcm9tICcuLi9qcy9zcXVhcmUuanMnXHJcbmltcG9ydCB7bWFrZU1vdmUsc2V0SW5kZXgsY2xpY2ssZml4U3VwZXIsZ2xvYmFsfSBmcm9tICcuLi9qcy9nbG9iYWxzLmpzJ1xyXG5cclxuU0laRSA9IGdsb2JhbC5TSVpFXHJcblxyXG4jZ2xvYmFsLmZpbGVuYW1lID0gJ2xpY2hlc3NfcGduXzIwMjMuMDMuMzBfQ2hyaXN0ZXJOaWxzc29uX3ZzX2Fzc21hbjY5NDIwLkhhQkpIcml3Lmpzb24nXHJcbiNnbG9iYWwuZmlsZW5hbWUgPSAnSmFuQ2hyaXN0ZXJOaWxzc29uX3ZzX2RuMTAyM18yMDIzLjAzLjI5Lmpzb24nXHJcbiNnbG9iYWwuZmlsZW5hbWUgPSBcImxpY2hlc3NfcGduXzIwMjMuMDMuMzFfT251cjE5MDctMDZfdnNfQ2hyaXN0ZXJOaWxzc29uLkJGVVlrbkVwLmpzb25cIlxyXG4jZ2xvYmFsLmZpbGVuYW1lID0gXCJsaWNoZXNzX3Bnbl8yMDIzLjAzLjMxX0NocmlzdGVyTmlsc3Nvbl92c19hcmFwb3Aua0VsSWdWNXUuanNvblwiXHJcbmdsb2JhbC5maWxlbmFtZSA9XCJsaWNoZXNzX3Bnbl8yMDIzLjA0LjAxX01vaGFtZWRGYWRlbDEyM192c19DaHJpc3Rlck5pbHNzb24tRDE1Lk15SlZvYzJZLmpzb25cIlxyXG5nbG9iYWwuZmlsZW5hbWUgPVwibGljaGVzc19wZ25fMjAyMy4wNC4wMV9raW5nMTk3MV92c19DaHJpc3Rlck5pbHNzb24uN2FQd1Z3OUEuanNvblwiXHJcblxyXG53aW5kb3cucHJlbG9hZCA9ID0+XHJcblx0Z2xvYmFsLmRhdGEgPSBsb2FkSlNPTiAnLi4vZGF0YS8nICsgZ2xvYmFsLmZpbGVuYW1lXHJcblx0Zm9yIGxldHRlciBpbiBcInJuYnFrcFwiXHJcblx0XHRnbG9iYWwucGljc1tsZXR0ZXJdID0gbG9hZEltYWdlICdpbWFnZXMvYicgKyBsZXR0ZXIgKyAnLnBuZydcclxuXHRmb3IgbGV0dGVyIGluIFwiUk5CUUtQXCJcclxuXHRcdGdsb2JhbC5waWNzW2xldHRlcl0gPSBsb2FkSW1hZ2UgJ2ltYWdlcy93JyArIGxldHRlciArICcucG5nJ1xyXG5cclxuIyB0aGVyZSBpcyBhIGJ1ZyBpbiBzcGxpdFxyXG5zcGxpdCA9IChzKVx0LT4gaWYgcz09XCJcIiB0aGVuIHJldHVybiBbXSBlbHNlIHJldHVybiBzLnNwbGl0IFwiIFwiXHJcblxyXG53aW5kb3cuc2V0dXAgPSA9PlxyXG5cdGNyZWF0ZUNhbnZhcyBTSVpFKjEwLjMsIFNJWkUqMTFcclxuXHJcblx0dGV4dEFsaWduIENFTlRFUixDRU5URVJcclxuXHRyZWN0TW9kZSBDRU5URVJcclxuXHJcblx0Z2xvYmFsLmJvYXJkID0gbmV3IEJvYXJkKClcclxuXHJcblx0IyBbMSwgMzUsIFwiZTVcIiwgXCJjNSBkNSBjNiBOYzZcIiwgXCJlN2U1XCIsIFwiYzdjNSBkN2Q1IGM3YzYgYjhjNlwiXSxcclxuXHJcblx0Z2xvYmFsLm1vdmVzID0gZ2xvYmFsLmRhdGEucGxpZXNcclxuXHRnbG9iYWwubW92ZXMgPSBfLm1hcCBnbG9iYWwubW92ZXMsIChtb3ZlKSA9PlxyXG5cdFx0c2NvcmUgPSBtb3ZlWzFdXHJcblx0XHRzYW4gPSBtb3ZlWzJdXHJcblx0XHRzdXBlcmlvcnNTYW4gPSBzcGxpdCBtb3ZlWzNdXHJcblx0XHR1Y2kgPSBtb3ZlWzRdXHJcblx0XHRzdXBlcmlvcnMgPSBzcGxpdCBtb3ZlWzVdXHJcblx0XHRzdXBlcmlvcnNTYW4ucmV2ZXJzZSgpXHJcblx0XHRzdXBlcmlvcnMucmV2ZXJzZSgpXHJcblx0XHR7c2NvcmUsIHVjaSwgc2FuLCBzdXBlcmlvcnMsIHN1cGVyaW9yc1Nhbn1cclxuXHRnbG9iYWwucGllY2Vzcy5wdXNoIGdsb2JhbC5ib2FyZC5waWVjZXNcclxuXHJcblx0Zm9yIG1vdmUgaW4gZ2xvYmFsLm1vdmVzXHJcblx0XHRnbG9iYWwuYm9hcmQucGllY2VzID0gbWFrZU1vdmUgbW92ZS51Y2ksIF8ubGFzdCBnbG9iYWwucGllY2Vzc1xyXG5cdFx0Z2xvYmFsLnBpZWNlc3MucHVzaCBnbG9iYWwuYm9hcmQucGllY2VzXHJcblxyXG5cdHNldEluZGV4IDAgIyB0b210IGJyw6RkZVxyXG5cclxuXHR4ZHJhdygpXHJcblxyXG54ZHJhdyA9ID0+XHJcblx0YmFja2dyb3VuZCAnZ3JheSdcclxuXHR0ZXh0U2l6ZSBTSVpFXHJcblx0Z2xvYmFsLmJvYXJkLmRyYXcoKVxyXG5cdGZvciBidXR0b24gaW4gZ2xvYmFsLmJ1dHRvbnNcclxuXHRcdGJ1dHRvbi5kcmF3KClcclxuXHJcbndpbmRvdy5rZXlQcmVzc2VkID0gPT5cclxuXHRpZiBrZXkgPT0gJ0Fycm93UmlnaHQnICB0aGVuIGNsaWNrICduZXh0J1xyXG5cdGlmIGtleSA9PSAnQXJyb3dMZWZ0JyB0aGVuIGNsaWNrICdwcmV2J1xyXG5cdGlmIGtleSA9PSAnQXJyb3dVcCcgIHRoZW4gY2xpY2sgJ3VwJ1xyXG5cdGlmIGtleSA9PSAnQXJyb3dEb3duJyB0aGVuIGNsaWNrICdkb3duJ1xyXG5cdGlmIGtleSA9PSAnICcgdGhlbiBjbGljayAnZmxpcCdcclxuXHRpZiBrZXkgPT0gJ0hvbWUnIHRoZW4gY2xpY2sgJ2ZpcnN0J1xyXG5cdGlmIGtleSA9PSAnRW5kJyB0aGVuIGNsaWNrICdsYXN0J1xyXG5cdHhkcmF3KClcclxuXHJcbndpbmRvdy5tb3VzZVByZXNzZWQgPSA9PlxyXG5cdGZvciBidXR0b24gaW4gZ2xvYmFsLmJ1dHRvbnMuY29uY2F0IGdsb2JhbC5ib2FyZC5idXR0b25zXHJcblx0XHRpZiBidXR0b24uaW5zaWRlIG1vdXNlWCxtb3VzZVlcclxuXHRcdFx0YnV0dG9uLm9uY2xpY2soKVxyXG5cdFx0XHR4ZHJhdygpXHJcblx0XHRcdHJldHVyblxyXG4iXX0=
//# sourceURL=c:\github\2023-018-Python-Chess_Evaluate\coffee\sketch.coffee